// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/load_balancer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc.Lb.V1 {

  /// <summary>Holder for reflection information generated from Protos/load_balancer.proto</summary>
  public static partial class LoadBalancerReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/load_balancer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoadBalancerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpQcm90b3MvbG9hZF9iYWxhbmNlci5wcm90bxIKZ3JwYy5sYi52MRoeZ29v",
            "Z2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvGh9nb29nbGUvcHJvdG9idWYv",
            "dGltZXN0YW1wLnByb3RvIqQBChJMb2FkQmFsYW5jZVJlcXVlc3QSQAoPaW5p",
            "dGlhbF9yZXF1ZXN0GAEgASgLMiUuZ3JwYy5sYi52MS5Jbml0aWFsTG9hZEJh",
            "bGFuY2VSZXF1ZXN0SAASLwoMY2xpZW50X3N0YXRzGAIgASgLMhcuZ3JwYy5s",
            "Yi52MS5DbGllbnRTdGF0c0gAQhsKGWxvYWRfYmFsYW5jZV9yZXF1ZXN0X3R5",
            "cGUiKQoZSW5pdGlhbExvYWRCYWxhbmNlUmVxdWVzdBIMCgRuYW1lGAEgASgJ",
            "IkQKE0NsaWVudFN0YXRzUGVyVG9rZW4SGgoSbG9hZF9iYWxhbmNlX3Rva2Vu",
            "GAEgASgJEhEKCW51bV9jYWxscxgCIAEoAyKkAgoLQ2xpZW50U3RhdHMSLQoJ",
            "dGltZXN0YW1wGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIZ",
            "ChFudW1fY2FsbHNfc3RhcnRlZBgCIAEoAxIaChJudW1fY2FsbHNfZmluaXNo",
            "ZWQYAyABKAMSNQotbnVtX2NhbGxzX2ZpbmlzaGVkX3dpdGhfY2xpZW50X2Zh",
            "aWxlZF90b19zZW5kGAYgASgDEikKIW51bV9jYWxsc19maW5pc2hlZF9rbm93",
            "bl9yZWNlaXZlZBgHIAEoAxJBChhjYWxsc19maW5pc2hlZF93aXRoX2Ryb3AY",
            "CCADKAsyHy5ncnBjLmxiLnYxLkNsaWVudFN0YXRzUGVyVG9rZW5KBAgEEAVK",
            "BAgFEAYi4QEKE0xvYWRCYWxhbmNlUmVzcG9uc2USQgoQaW5pdGlhbF9yZXNw",
            "b25zZRgBIAEoCzImLmdycGMubGIudjEuSW5pdGlhbExvYWRCYWxhbmNlUmVz",
            "cG9uc2VIABItCgtzZXJ2ZXJfbGlzdBgCIAEoCzIWLmdycGMubGIudjEuU2Vy",
            "dmVyTGlzdEgAEjkKEWZhbGxiYWNrX3Jlc3BvbnNlGAMgASgLMhwuZ3JwYy5s",
            "Yi52MS5GYWxsYmFja1Jlc3BvbnNlSABCHAoabG9hZF9iYWxhbmNlX3Jlc3Bv",
            "bnNlX3R5cGUiEgoQRmFsbGJhY2tSZXNwb25zZSJ9ChpJbml0aWFsTG9hZEJh",
            "bGFuY2VSZXNwb25zZRIeChZsb2FkX2JhbGFuY2VyX2RlbGVnYXRlGAEgASgJ",
            "Ej8KHGNsaWVudF9zdGF0c19yZXBvcnRfaW50ZXJ2YWwYAiABKAsyGS5nb29n",
            "bGUucHJvdG9idWYuRHVyYXRpb24iNwoKU2VydmVyTGlzdBIjCgdzZXJ2ZXJz",
            "GAEgAygLMhIuZ3JwYy5sYi52MS5TZXJ2ZXJKBAgDEAQiWgoGU2VydmVyEhIK",
            "CmlwX2FkZHJlc3MYASABKAwSDAoEcG9ydBgCIAEoBRIaChJsb2FkX2JhbGFu",
            "Y2VfdG9rZW4YAyABKAkSDAoEZHJvcBgEIAEoCEoECAUQBjJiCgxMb2FkQmFs",
            "YW5jZXISUgoLQmFsYW5jZUxvYWQSHi5ncnBjLmxiLnYxLkxvYWRCYWxhbmNl",
            "UmVxdWVzdBofLmdycGMubGIudjEuTG9hZEJhbGFuY2VSZXNwb25zZSgBMAFC",
            "VwoNaW8uZ3JwYy5sYi52MUIRTG9hZEJhbGFuY2VyUHJvdG9QAVoxZ29vZ2xl",
            "LmdvbGFuZy5vcmcvZ3JwYy9iYWxhbmNlci9ncnBjbGIvZ3JwY19sYl92MWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Lb.V1.LoadBalanceRequest), global::Grpc.Lb.V1.LoadBalanceRequest.Parser, new[]{ "InitialRequest", "ClientStats" }, new[]{ "LoadBalanceRequestType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Lb.V1.InitialLoadBalanceRequest), global::Grpc.Lb.V1.InitialLoadBalanceRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Lb.V1.ClientStatsPerToken), global::Grpc.Lb.V1.ClientStatsPerToken.Parser, new[]{ "LoadBalanceToken", "NumCalls" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Lb.V1.ClientStats), global::Grpc.Lb.V1.ClientStats.Parser, new[]{ "Timestamp", "NumCallsStarted", "NumCallsFinished", "NumCallsFinishedWithClientFailedToSend", "NumCallsFinishedKnownReceived", "CallsFinishedWithDrop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Lb.V1.LoadBalanceResponse), global::Grpc.Lb.V1.LoadBalanceResponse.Parser, new[]{ "InitialResponse", "ServerList", "FallbackResponse" }, new[]{ "LoadBalanceResponseType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Lb.V1.FallbackResponse), global::Grpc.Lb.V1.FallbackResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Lb.V1.InitialLoadBalanceResponse), global::Grpc.Lb.V1.InitialLoadBalanceResponse.Parser, new[]{ "LoadBalancerDelegate", "ClientStatsReportInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Lb.V1.ServerList), global::Grpc.Lb.V1.ServerList.Parser, new[]{ "Servers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Lb.V1.Server), global::Grpc.Lb.V1.Server.Parser, new[]{ "IpAddress", "Port", "LoadBalanceToken", "Drop" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LoadBalanceRequest : pb::IMessage<LoadBalanceRequest> {
    private static readonly pb::MessageParser<LoadBalanceRequest> _parser = new pb::MessageParser<LoadBalanceRequest>(() => new LoadBalanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadBalanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Lb.V1.LoadBalancerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadBalanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadBalanceRequest(LoadBalanceRequest other) : this() {
      switch (other.LoadBalanceRequestTypeCase) {
        case LoadBalanceRequestTypeOneofCase.InitialRequest:
          InitialRequest = other.InitialRequest.Clone();
          break;
        case LoadBalanceRequestTypeOneofCase.ClientStats:
          ClientStats = other.ClientStats.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadBalanceRequest Clone() {
      return new LoadBalanceRequest(this);
    }

    /// <summary>Field number for the "initial_request" field.</summary>
    public const int InitialRequestFieldNumber = 1;
    /// <summary>
    /// This message should be sent on the first request to the load balancer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Lb.V1.InitialLoadBalanceRequest InitialRequest {
      get { return loadBalanceRequestTypeCase_ == LoadBalanceRequestTypeOneofCase.InitialRequest ? (global::Grpc.Lb.V1.InitialLoadBalanceRequest) loadBalanceRequestType_ : null; }
      set {
        loadBalanceRequestType_ = value;
        loadBalanceRequestTypeCase_ = value == null ? LoadBalanceRequestTypeOneofCase.None : LoadBalanceRequestTypeOneofCase.InitialRequest;
      }
    }

    /// <summary>Field number for the "client_stats" field.</summary>
    public const int ClientStatsFieldNumber = 2;
    /// <summary>
    /// The client stats should be periodically reported to the load balancer
    /// based on the duration defined in the InitialLoadBalanceResponse.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Lb.V1.ClientStats ClientStats {
      get { return loadBalanceRequestTypeCase_ == LoadBalanceRequestTypeOneofCase.ClientStats ? (global::Grpc.Lb.V1.ClientStats) loadBalanceRequestType_ : null; }
      set {
        loadBalanceRequestType_ = value;
        loadBalanceRequestTypeCase_ = value == null ? LoadBalanceRequestTypeOneofCase.None : LoadBalanceRequestTypeOneofCase.ClientStats;
      }
    }

    private object loadBalanceRequestType_;
    /// <summary>Enum of possible cases for the "load_balance_request_type" oneof.</summary>
    public enum LoadBalanceRequestTypeOneofCase {
      None = 0,
      InitialRequest = 1,
      ClientStats = 2,
    }
    private LoadBalanceRequestTypeOneofCase loadBalanceRequestTypeCase_ = LoadBalanceRequestTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadBalanceRequestTypeOneofCase LoadBalanceRequestTypeCase {
      get { return loadBalanceRequestTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLoadBalanceRequestType() {
      loadBalanceRequestTypeCase_ = LoadBalanceRequestTypeOneofCase.None;
      loadBalanceRequestType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadBalanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadBalanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InitialRequest, other.InitialRequest)) return false;
      if (!object.Equals(ClientStats, other.ClientStats)) return false;
      if (LoadBalanceRequestTypeCase != other.LoadBalanceRequestTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (loadBalanceRequestTypeCase_ == LoadBalanceRequestTypeOneofCase.InitialRequest) hash ^= InitialRequest.GetHashCode();
      if (loadBalanceRequestTypeCase_ == LoadBalanceRequestTypeOneofCase.ClientStats) hash ^= ClientStats.GetHashCode();
      hash ^= (int) loadBalanceRequestTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (loadBalanceRequestTypeCase_ == LoadBalanceRequestTypeOneofCase.InitialRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(InitialRequest);
      }
      if (loadBalanceRequestTypeCase_ == LoadBalanceRequestTypeOneofCase.ClientStats) {
        output.WriteRawTag(18);
        output.WriteMessage(ClientStats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (loadBalanceRequestTypeCase_ == LoadBalanceRequestTypeOneofCase.InitialRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitialRequest);
      }
      if (loadBalanceRequestTypeCase_ == LoadBalanceRequestTypeOneofCase.ClientStats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientStats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadBalanceRequest other) {
      if (other == null) {
        return;
      }
      switch (other.LoadBalanceRequestTypeCase) {
        case LoadBalanceRequestTypeOneofCase.InitialRequest:
          if (InitialRequest == null) {
            InitialRequest = new global::Grpc.Lb.V1.InitialLoadBalanceRequest();
          }
          InitialRequest.MergeFrom(other.InitialRequest);
          break;
        case LoadBalanceRequestTypeOneofCase.ClientStats:
          if (ClientStats == null) {
            ClientStats = new global::Grpc.Lb.V1.ClientStats();
          }
          ClientStats.MergeFrom(other.ClientStats);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Grpc.Lb.V1.InitialLoadBalanceRequest subBuilder = new global::Grpc.Lb.V1.InitialLoadBalanceRequest();
            if (loadBalanceRequestTypeCase_ == LoadBalanceRequestTypeOneofCase.InitialRequest) {
              subBuilder.MergeFrom(InitialRequest);
            }
            input.ReadMessage(subBuilder);
            InitialRequest = subBuilder;
            break;
          }
          case 18: {
            global::Grpc.Lb.V1.ClientStats subBuilder = new global::Grpc.Lb.V1.ClientStats();
            if (loadBalanceRequestTypeCase_ == LoadBalanceRequestTypeOneofCase.ClientStats) {
              subBuilder.MergeFrom(ClientStats);
            }
            input.ReadMessage(subBuilder);
            ClientStats = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class InitialLoadBalanceRequest : pb::IMessage<InitialLoadBalanceRequest> {
    private static readonly pb::MessageParser<InitialLoadBalanceRequest> _parser = new pb::MessageParser<InitialLoadBalanceRequest>(() => new InitialLoadBalanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitialLoadBalanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Lb.V1.LoadBalancerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialLoadBalanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialLoadBalanceRequest(InitialLoadBalanceRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialLoadBalanceRequest Clone() {
      return new InitialLoadBalanceRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the load balanced service (e.g., service.googleapis.com). Its
    /// length should be less than 256 bytes.
    /// The name might include a port number. How to handle the port number is up
    /// to the balancer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitialLoadBalanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitialLoadBalanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitialLoadBalanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Contains the number of calls finished for a particular load balance token.
  /// </summary>
  public sealed partial class ClientStatsPerToken : pb::IMessage<ClientStatsPerToken> {
    private static readonly pb::MessageParser<ClientStatsPerToken> _parser = new pb::MessageParser<ClientStatsPerToken>(() => new ClientStatsPerToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientStatsPerToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Lb.V1.LoadBalancerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientStatsPerToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientStatsPerToken(ClientStatsPerToken other) : this() {
      loadBalanceToken_ = other.loadBalanceToken_;
      numCalls_ = other.numCalls_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientStatsPerToken Clone() {
      return new ClientStatsPerToken(this);
    }

    /// <summary>Field number for the "load_balance_token" field.</summary>
    public const int LoadBalanceTokenFieldNumber = 1;
    private string loadBalanceToken_ = "";
    /// <summary>
    /// See Server.load_balance_token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoadBalanceToken {
      get { return loadBalanceToken_; }
      set {
        loadBalanceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num_calls" field.</summary>
    public const int NumCallsFieldNumber = 2;
    private long numCalls_;
    /// <summary>
    /// The total number of RPCs that finished associated with the token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumCalls {
      get { return numCalls_; }
      set {
        numCalls_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientStatsPerToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientStatsPerToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoadBalanceToken != other.LoadBalanceToken) return false;
      if (NumCalls != other.NumCalls) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoadBalanceToken.Length != 0) hash ^= LoadBalanceToken.GetHashCode();
      if (NumCalls != 0L) hash ^= NumCalls.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LoadBalanceToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LoadBalanceToken);
      }
      if (NumCalls != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NumCalls);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoadBalanceToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoadBalanceToken);
      }
      if (NumCalls != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumCalls);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientStatsPerToken other) {
      if (other == null) {
        return;
      }
      if (other.LoadBalanceToken.Length != 0) {
        LoadBalanceToken = other.LoadBalanceToken;
      }
      if (other.NumCalls != 0L) {
        NumCalls = other.NumCalls;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LoadBalanceToken = input.ReadString();
            break;
          }
          case 16: {
            NumCalls = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Contains client level statistics that are useful to load balancing. Each
  /// count except the timestamp should be reset to zero after reporting the stats.
  /// </summary>
  public sealed partial class ClientStats : pb::IMessage<ClientStats> {
    private static readonly pb::MessageParser<ClientStats> _parser = new pb::MessageParser<ClientStats>(() => new ClientStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Lb.V1.LoadBalancerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientStats(ClientStats other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      numCallsStarted_ = other.numCallsStarted_;
      numCallsFinished_ = other.numCallsFinished_;
      numCallsFinishedWithClientFailedToSend_ = other.numCallsFinishedWithClientFailedToSend_;
      numCallsFinishedKnownReceived_ = other.numCallsFinishedKnownReceived_;
      callsFinishedWithDrop_ = other.callsFinishedWithDrop_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientStats Clone() {
      return new ClientStats(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// The timestamp of generating the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "num_calls_started" field.</summary>
    public const int NumCallsStartedFieldNumber = 2;
    private long numCallsStarted_;
    /// <summary>
    /// The total number of RPCs that started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumCallsStarted {
      get { return numCallsStarted_; }
      set {
        numCallsStarted_ = value;
      }
    }

    /// <summary>Field number for the "num_calls_finished" field.</summary>
    public const int NumCallsFinishedFieldNumber = 3;
    private long numCallsFinished_;
    /// <summary>
    /// The total number of RPCs that finished.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumCallsFinished {
      get { return numCallsFinished_; }
      set {
        numCallsFinished_ = value;
      }
    }

    /// <summary>Field number for the "num_calls_finished_with_client_failed_to_send" field.</summary>
    public const int NumCallsFinishedWithClientFailedToSendFieldNumber = 6;
    private long numCallsFinishedWithClientFailedToSend_;
    /// <summary>
    /// The total number of RPCs that failed to reach a server except dropped RPCs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumCallsFinishedWithClientFailedToSend {
      get { return numCallsFinishedWithClientFailedToSend_; }
      set {
        numCallsFinishedWithClientFailedToSend_ = value;
      }
    }

    /// <summary>Field number for the "num_calls_finished_known_received" field.</summary>
    public const int NumCallsFinishedKnownReceivedFieldNumber = 7;
    private long numCallsFinishedKnownReceived_;
    /// <summary>
    /// The total number of RPCs that finished and are known to have been received
    /// by a server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumCallsFinishedKnownReceived {
      get { return numCallsFinishedKnownReceived_; }
      set {
        numCallsFinishedKnownReceived_ = value;
      }
    }

    /// <summary>Field number for the "calls_finished_with_drop" field.</summary>
    public const int CallsFinishedWithDropFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Grpc.Lb.V1.ClientStatsPerToken> _repeated_callsFinishedWithDrop_codec
        = pb::FieldCodec.ForMessage(66, global::Grpc.Lb.V1.ClientStatsPerToken.Parser);
    private readonly pbc::RepeatedField<global::Grpc.Lb.V1.ClientStatsPerToken> callsFinishedWithDrop_ = new pbc::RepeatedField<global::Grpc.Lb.V1.ClientStatsPerToken>();
    /// <summary>
    /// The list of dropped calls.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.Lb.V1.ClientStatsPerToken> CallsFinishedWithDrop {
      get { return callsFinishedWithDrop_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (NumCallsStarted != other.NumCallsStarted) return false;
      if (NumCallsFinished != other.NumCallsFinished) return false;
      if (NumCallsFinishedWithClientFailedToSend != other.NumCallsFinishedWithClientFailedToSend) return false;
      if (NumCallsFinishedKnownReceived != other.NumCallsFinishedKnownReceived) return false;
      if(!callsFinishedWithDrop_.Equals(other.callsFinishedWithDrop_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (NumCallsStarted != 0L) hash ^= NumCallsStarted.GetHashCode();
      if (NumCallsFinished != 0L) hash ^= NumCallsFinished.GetHashCode();
      if (NumCallsFinishedWithClientFailedToSend != 0L) hash ^= NumCallsFinishedWithClientFailedToSend.GetHashCode();
      if (NumCallsFinishedKnownReceived != 0L) hash ^= NumCallsFinishedKnownReceived.GetHashCode();
      hash ^= callsFinishedWithDrop_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (NumCallsStarted != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NumCallsStarted);
      }
      if (NumCallsFinished != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NumCallsFinished);
      }
      if (NumCallsFinishedWithClientFailedToSend != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(NumCallsFinishedWithClientFailedToSend);
      }
      if (NumCallsFinishedKnownReceived != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(NumCallsFinishedKnownReceived);
      }
      callsFinishedWithDrop_.WriteTo(output, _repeated_callsFinishedWithDrop_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (NumCallsStarted != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumCallsStarted);
      }
      if (NumCallsFinished != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumCallsFinished);
      }
      if (NumCallsFinishedWithClientFailedToSend != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumCallsFinishedWithClientFailedToSend);
      }
      if (NumCallsFinishedKnownReceived != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumCallsFinishedKnownReceived);
      }
      size += callsFinishedWithDrop_.CalculateSize(_repeated_callsFinishedWithDrop_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientStats other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.NumCallsStarted != 0L) {
        NumCallsStarted = other.NumCallsStarted;
      }
      if (other.NumCallsFinished != 0L) {
        NumCallsFinished = other.NumCallsFinished;
      }
      if (other.NumCallsFinishedWithClientFailedToSend != 0L) {
        NumCallsFinishedWithClientFailedToSend = other.NumCallsFinishedWithClientFailedToSend;
      }
      if (other.NumCallsFinishedKnownReceived != 0L) {
        NumCallsFinishedKnownReceived = other.NumCallsFinishedKnownReceived;
      }
      callsFinishedWithDrop_.Add(other.callsFinishedWithDrop_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 16: {
            NumCallsStarted = input.ReadInt64();
            break;
          }
          case 24: {
            NumCallsFinished = input.ReadInt64();
            break;
          }
          case 48: {
            NumCallsFinishedWithClientFailedToSend = input.ReadInt64();
            break;
          }
          case 56: {
            NumCallsFinishedKnownReceived = input.ReadInt64();
            break;
          }
          case 66: {
            callsFinishedWithDrop_.AddEntriesFrom(input, _repeated_callsFinishedWithDrop_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoadBalanceResponse : pb::IMessage<LoadBalanceResponse> {
    private static readonly pb::MessageParser<LoadBalanceResponse> _parser = new pb::MessageParser<LoadBalanceResponse>(() => new LoadBalanceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadBalanceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Lb.V1.LoadBalancerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadBalanceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadBalanceResponse(LoadBalanceResponse other) : this() {
      switch (other.LoadBalanceResponseTypeCase) {
        case LoadBalanceResponseTypeOneofCase.InitialResponse:
          InitialResponse = other.InitialResponse.Clone();
          break;
        case LoadBalanceResponseTypeOneofCase.ServerList:
          ServerList = other.ServerList.Clone();
          break;
        case LoadBalanceResponseTypeOneofCase.FallbackResponse:
          FallbackResponse = other.FallbackResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadBalanceResponse Clone() {
      return new LoadBalanceResponse(this);
    }

    /// <summary>Field number for the "initial_response" field.</summary>
    public const int InitialResponseFieldNumber = 1;
    /// <summary>
    /// This message should be sent on the first response to the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Lb.V1.InitialLoadBalanceResponse InitialResponse {
      get { return loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.InitialResponse ? (global::Grpc.Lb.V1.InitialLoadBalanceResponse) loadBalanceResponseType_ : null; }
      set {
        loadBalanceResponseType_ = value;
        loadBalanceResponseTypeCase_ = value == null ? LoadBalanceResponseTypeOneofCase.None : LoadBalanceResponseTypeOneofCase.InitialResponse;
      }
    }

    /// <summary>Field number for the "server_list" field.</summary>
    public const int ServerListFieldNumber = 2;
    /// <summary>
    /// Contains the list of servers selected by the load balancer. The client
    /// should send requests to these servers in the specified order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Lb.V1.ServerList ServerList {
      get { return loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.ServerList ? (global::Grpc.Lb.V1.ServerList) loadBalanceResponseType_ : null; }
      set {
        loadBalanceResponseType_ = value;
        loadBalanceResponseTypeCase_ = value == null ? LoadBalanceResponseTypeOneofCase.None : LoadBalanceResponseTypeOneofCase.ServerList;
      }
    }

    /// <summary>Field number for the "fallback_response" field.</summary>
    public const int FallbackResponseFieldNumber = 3;
    /// <summary>
    /// If this field is set, then the client should eagerly enter fallback
    /// mode (even if there are existing, healthy connections to backends).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Lb.V1.FallbackResponse FallbackResponse {
      get { return loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.FallbackResponse ? (global::Grpc.Lb.V1.FallbackResponse) loadBalanceResponseType_ : null; }
      set {
        loadBalanceResponseType_ = value;
        loadBalanceResponseTypeCase_ = value == null ? LoadBalanceResponseTypeOneofCase.None : LoadBalanceResponseTypeOneofCase.FallbackResponse;
      }
    }

    private object loadBalanceResponseType_;
    /// <summary>Enum of possible cases for the "load_balance_response_type" oneof.</summary>
    public enum LoadBalanceResponseTypeOneofCase {
      None = 0,
      InitialResponse = 1,
      ServerList = 2,
      FallbackResponse = 3,
    }
    private LoadBalanceResponseTypeOneofCase loadBalanceResponseTypeCase_ = LoadBalanceResponseTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadBalanceResponseTypeOneofCase LoadBalanceResponseTypeCase {
      get { return loadBalanceResponseTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLoadBalanceResponseType() {
      loadBalanceResponseTypeCase_ = LoadBalanceResponseTypeOneofCase.None;
      loadBalanceResponseType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadBalanceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadBalanceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InitialResponse, other.InitialResponse)) return false;
      if (!object.Equals(ServerList, other.ServerList)) return false;
      if (!object.Equals(FallbackResponse, other.FallbackResponse)) return false;
      if (LoadBalanceResponseTypeCase != other.LoadBalanceResponseTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.InitialResponse) hash ^= InitialResponse.GetHashCode();
      if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.ServerList) hash ^= ServerList.GetHashCode();
      if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.FallbackResponse) hash ^= FallbackResponse.GetHashCode();
      hash ^= (int) loadBalanceResponseTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.InitialResponse) {
        output.WriteRawTag(10);
        output.WriteMessage(InitialResponse);
      }
      if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.ServerList) {
        output.WriteRawTag(18);
        output.WriteMessage(ServerList);
      }
      if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.FallbackResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(FallbackResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.InitialResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitialResponse);
      }
      if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.ServerList) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerList);
      }
      if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.FallbackResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FallbackResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadBalanceResponse other) {
      if (other == null) {
        return;
      }
      switch (other.LoadBalanceResponseTypeCase) {
        case LoadBalanceResponseTypeOneofCase.InitialResponse:
          if (InitialResponse == null) {
            InitialResponse = new global::Grpc.Lb.V1.InitialLoadBalanceResponse();
          }
          InitialResponse.MergeFrom(other.InitialResponse);
          break;
        case LoadBalanceResponseTypeOneofCase.ServerList:
          if (ServerList == null) {
            ServerList = new global::Grpc.Lb.V1.ServerList();
          }
          ServerList.MergeFrom(other.ServerList);
          break;
        case LoadBalanceResponseTypeOneofCase.FallbackResponse:
          if (FallbackResponse == null) {
            FallbackResponse = new global::Grpc.Lb.V1.FallbackResponse();
          }
          FallbackResponse.MergeFrom(other.FallbackResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Grpc.Lb.V1.InitialLoadBalanceResponse subBuilder = new global::Grpc.Lb.V1.InitialLoadBalanceResponse();
            if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.InitialResponse) {
              subBuilder.MergeFrom(InitialResponse);
            }
            input.ReadMessage(subBuilder);
            InitialResponse = subBuilder;
            break;
          }
          case 18: {
            global::Grpc.Lb.V1.ServerList subBuilder = new global::Grpc.Lb.V1.ServerList();
            if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.ServerList) {
              subBuilder.MergeFrom(ServerList);
            }
            input.ReadMessage(subBuilder);
            ServerList = subBuilder;
            break;
          }
          case 26: {
            global::Grpc.Lb.V1.FallbackResponse subBuilder = new global::Grpc.Lb.V1.FallbackResponse();
            if (loadBalanceResponseTypeCase_ == LoadBalanceResponseTypeOneofCase.FallbackResponse) {
              subBuilder.MergeFrom(FallbackResponse);
            }
            input.ReadMessage(subBuilder);
            FallbackResponse = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class FallbackResponse : pb::IMessage<FallbackResponse> {
    private static readonly pb::MessageParser<FallbackResponse> _parser = new pb::MessageParser<FallbackResponse>(() => new FallbackResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FallbackResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Lb.V1.LoadBalancerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FallbackResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FallbackResponse(FallbackResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FallbackResponse Clone() {
      return new FallbackResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FallbackResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FallbackResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FallbackResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class InitialLoadBalanceResponse : pb::IMessage<InitialLoadBalanceResponse> {
    private static readonly pb::MessageParser<InitialLoadBalanceResponse> _parser = new pb::MessageParser<InitialLoadBalanceResponse>(() => new InitialLoadBalanceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitialLoadBalanceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Lb.V1.LoadBalancerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialLoadBalanceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialLoadBalanceResponse(InitialLoadBalanceResponse other) : this() {
      loadBalancerDelegate_ = other.loadBalancerDelegate_;
      clientStatsReportInterval_ = other.clientStatsReportInterval_ != null ? other.clientStatsReportInterval_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialLoadBalanceResponse Clone() {
      return new InitialLoadBalanceResponse(this);
    }

    /// <summary>Field number for the "load_balancer_delegate" field.</summary>
    public const int LoadBalancerDelegateFieldNumber = 1;
    private string loadBalancerDelegate_ = "";
    /// <summary>
    /// This is an application layer redirect that indicates the client should use
    /// the specified server for load balancing. When this field is non-empty in
    /// the response, the client should open a separate connection to the
    /// load_balancer_delegate and call the BalanceLoad method. Its length should
    /// be less than 64 bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoadBalancerDelegate {
      get { return loadBalancerDelegate_; }
      set {
        loadBalancerDelegate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_stats_report_interval" field.</summary>
    public const int ClientStatsReportIntervalFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration clientStatsReportInterval_;
    /// <summary>
    /// This interval defines how often the client should send the client stats
    /// to the load balancer. Stats should only be reported when the duration is
    /// positive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration ClientStatsReportInterval {
      get { return clientStatsReportInterval_; }
      set {
        clientStatsReportInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitialLoadBalanceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitialLoadBalanceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoadBalancerDelegate != other.LoadBalancerDelegate) return false;
      if (!object.Equals(ClientStatsReportInterval, other.ClientStatsReportInterval)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoadBalancerDelegate.Length != 0) hash ^= LoadBalancerDelegate.GetHashCode();
      if (clientStatsReportInterval_ != null) hash ^= ClientStatsReportInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LoadBalancerDelegate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LoadBalancerDelegate);
      }
      if (clientStatsReportInterval_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ClientStatsReportInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoadBalancerDelegate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoadBalancerDelegate);
      }
      if (clientStatsReportInterval_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientStatsReportInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitialLoadBalanceResponse other) {
      if (other == null) {
        return;
      }
      if (other.LoadBalancerDelegate.Length != 0) {
        LoadBalancerDelegate = other.LoadBalancerDelegate;
      }
      if (other.clientStatsReportInterval_ != null) {
        if (clientStatsReportInterval_ == null) {
          ClientStatsReportInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        ClientStatsReportInterval.MergeFrom(other.ClientStatsReportInterval);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LoadBalancerDelegate = input.ReadString();
            break;
          }
          case 18: {
            if (clientStatsReportInterval_ == null) {
              ClientStatsReportInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ClientStatsReportInterval);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerList : pb::IMessage<ServerList> {
    private static readonly pb::MessageParser<ServerList> _parser = new pb::MessageParser<ServerList>(() => new ServerList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Lb.V1.LoadBalancerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerList(ServerList other) : this() {
      servers_ = other.servers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerList Clone() {
      return new ServerList(this);
    }

    /// <summary>Field number for the "servers" field.</summary>
    public const int ServersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Grpc.Lb.V1.Server> _repeated_servers_codec
        = pb::FieldCodec.ForMessage(10, global::Grpc.Lb.V1.Server.Parser);
    private readonly pbc::RepeatedField<global::Grpc.Lb.V1.Server> servers_ = new pbc::RepeatedField<global::Grpc.Lb.V1.Server>();
    /// <summary>
    /// Contains a list of servers selected by the load balancer. The list will
    /// be updated when server resolutions change or as needed to balance load
    /// across more servers. The client should consume the server list in order
    /// unless instructed otherwise via the client_config.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.Lb.V1.Server> Servers {
      get { return servers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!servers_.Equals(other.servers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= servers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      servers_.WriteTo(output, _repeated_servers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += servers_.CalculateSize(_repeated_servers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerList other) {
      if (other == null) {
        return;
      }
      servers_.Add(other.servers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            servers_.AddEntriesFrom(input, _repeated_servers_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Contains server information. When the drop field is not true, use the other
  /// fields.
  /// </summary>
  public sealed partial class Server : pb::IMessage<Server> {
    private static readonly pb::MessageParser<Server> _parser = new pb::MessageParser<Server>(() => new Server());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Server> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Lb.V1.LoadBalancerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Server() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Server(Server other) : this() {
      ipAddress_ = other.ipAddress_;
      port_ = other.port_;
      loadBalanceToken_ = other.loadBalanceToken_;
      drop_ = other.drop_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Server Clone() {
      return new Server(this);
    }

    /// <summary>Field number for the "ip_address" field.</summary>
    public const int IpAddressFieldNumber = 1;
    private pb::ByteString ipAddress_ = pb::ByteString.Empty;
    /// <summary>
    /// A resolved address for the server, serialized in network-byte-order. It may
    /// either be an IPv4 or IPv6 address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString IpAddress {
      get { return ipAddress_; }
      set {
        ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    /// <summary>
    /// A resolved port number for the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "load_balance_token" field.</summary>
    public const int LoadBalanceTokenFieldNumber = 3;
    private string loadBalanceToken_ = "";
    /// <summary>
    /// An opaque but printable token for load reporting. The client must include
    /// the token of the picked server into the initial metadata when it starts a
    /// call to that server. The token is used by the server to verify the request
    /// and to allow the server to report load to the gRPC LB system. The token is
    /// also used in client stats for reporting dropped calls.
    ///
    /// Its length can be variable but must be less than 50 bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoadBalanceToken {
      get { return loadBalanceToken_; }
      set {
        loadBalanceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "drop" field.</summary>
    public const int DropFieldNumber = 4;
    private bool drop_;
    /// <summary>
    /// Indicates whether this particular request should be dropped by the client.
    /// If the request is dropped, there will be a corresponding entry in
    /// ClientStats.calls_finished_with_drop.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Drop {
      get { return drop_; }
      set {
        drop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Server);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Server other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IpAddress != other.IpAddress) return false;
      if (Port != other.Port) return false;
      if (LoadBalanceToken != other.LoadBalanceToken) return false;
      if (Drop != other.Drop) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IpAddress.Length != 0) hash ^= IpAddress.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (LoadBalanceToken.Length != 0) hash ^= LoadBalanceToken.GetHashCode();
      if (Drop != false) hash ^= Drop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IpAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(IpAddress);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (LoadBalanceToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LoadBalanceToken);
      }
      if (Drop != false) {
        output.WriteRawTag(32);
        output.WriteBool(Drop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IpAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(IpAddress);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (LoadBalanceToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoadBalanceToken);
      }
      if (Drop != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Server other) {
      if (other == null) {
        return;
      }
      if (other.IpAddress.Length != 0) {
        IpAddress = other.IpAddress;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.LoadBalanceToken.Length != 0) {
        LoadBalanceToken = other.LoadBalanceToken;
      }
      if (other.Drop != false) {
        Drop = other.Drop;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IpAddress = input.ReadBytes();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            LoadBalanceToken = input.ReadString();
            break;
          }
          case 32: {
            Drop = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
